pipeline {
    agent none

    stages {
        stage('build') {
            when {
                changeset "**/vote/**"  // Adjust for vote or result as necessary
            }
            agent {
                docker {
                    image 'python:3.11-slim'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Building vote application...'
                dir('vote') {  // Change to 'result' for result application
                    sh 'pip install -r requirements.txt'
                }
            }
        }

        stage('test') {
            when {
                changeset "**/vote/**"
            }
            agent {
                docker {
                    image 'python:3.11-slim'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Running tests on vote application...'
                dir('vote') {
                    sh 'pytest'
                }
            }
        }

        stage('docker-package') {
            agent any
            when {
                changeset "**/vote/**"
                branch 'master'
            }
            steps {
                echo 'Building Docker image for vote application...'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("chrisanich/vote:v${env.BUILD_ID}", "./vote")
                        voteImage.push()
                        voteImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Build and Docker packaging for vote application is complete.'
        }
    }
}
