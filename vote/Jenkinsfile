pipeline {
    agent none

    tools {
        git 'Default'  // Ensure this matches the Git configuration name in Jenkins
    }

    stages {
        stage('Checkout') {
            agent any
            steps {
                echo 'Checking out the vote application...'
                checkout scm
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'python:3.11-slim'
                    args '-u root:root -v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Building vote application...'
                dir('vote') {
                    // Set up virtual environment and install dependencies
                    sh '''
                        python -m venv venv
                        . venv/bin/activate
                        pip install --upgrade pip
                        pip install -r requirements.txt
                        pip install pytest
                    '''
                }
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'python:3.11-slim'
                    args '-u root:root -v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Running tests on vote application...'
                dir('vote') {
                    // Run tests within the virtual environment
                    sh '''
                        . venv/bin/activate
                        pytest
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            agent any
            when {
                expression {
                    return currentBuild.currentResult == 'SUCCESS'
                }
            }
            steps {
                echo 'Building Docker image for vote application...'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("chrisanich/vote:v${env.BUILD_ID}", "./vote")
                        voteImage.push()
                        voteImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Build and Docker packaging for vote application is complete.'
        }
    }
}
