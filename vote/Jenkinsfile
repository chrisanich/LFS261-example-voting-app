pipeline {
    agent none  // No default agent for the entire pipeline

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3.11-slim'  // Use the Python Docker image that includes pip
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Building vote application...'
                dir('vote') {
                    sh 'pip install --upgrade pip'  // Upgrade pip to avoid compatibility issues
                    sh 'pip install -r requirements.txt'  // Install dependencies using pip
                }
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'python:3.11-slim'  // Use the same image for the test stage
                }
            }
            steps {
                echo 'Running tests on vote application...'
                dir('vote') {
                    sh 'pytest'  // Run tests using pytest
                }
            }
        }

        stage('Docker Build & Push') {
            agent any
            environment {
                DOCKER_HUB_CREDENTIALS = credentials('dockerlogin')  // Use Docker Hub credentials
            }
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS) {
                        def voteImage = docker.build("chrisanich/vote:${env.BUILD_NUMBER}", "./vote")
                        voteImage.push()
                        voteImage.push('latest')
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Build and Docker packaging for vote application is complete.'
        }
    }
}
