pipeline {
    agent none

    stages {
        stage('Checkout') {
            agent any
            steps {
                echo 'Checking out the vote application...'
                checkout scm
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'python:3.11-slim'
                    args '-u root:root -v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Building vote application...'
                dir('vote') {
                    sh '''
                        # Install dependencies globally without virtual environment
                        pip install --upgrade pip
                        pip install -r ../requirements.txt --user
                        pip install pytest --user
                        
                        # Add the user local bin to PATH for this session
                        export PATH=$PATH:/root/.local/bin

                        # Print Python and pip location, PATH, and Python packages
                        echo "Python location: $(which python3)"
                        echo "Pip location: $(which pip)"
                        echo "Pytest location: $(which pytest)"
                        echo "Python version: $(python3 --version)"
                        echo "Pip version: $(pip --version)"
                        echo "PATH: $PATH"
                        pip list
                    '''
                }
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'python:3.11-slim'
                    args '-u root:root -v $HOME/.m2:/root/.m2'
                }
            }
            environment {
                PYTHONPATH = "${env.WORKSPACE}/vote"  // Set PYTHONPATH to include the vote directory
            }
            steps {
                echo 'Running tests on vote application...'
                dir('vote') {
                    sh '''
                        # Print PATH and check if pytest is available
                        echo "Before running tests:"
                        echo "PATH: $PATH"
                        which pytest || echo "pytest not found"
                        pytest
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            agent any
            when {
                expression {
                    return currentBuild.currentResult == 'SUCCESS'
                }
            }
            steps {
                echo 'Building Docker image for vote application...'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("chrisanich/vote:v${env.BUILD_ID}", "./vote")
                        voteImage.push()
                        voteImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Build and Docker packaging for vote application is complete.'
        }
    }
}
